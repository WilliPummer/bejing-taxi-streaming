version: "3.9"
services:
  zookeeper-1:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  zookeeper-2:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 32181:2181

  kafka-1:
    restart: always
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2

    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-2:
    restart: always
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  producer:
    depends_on:
      - kafka-1
      - kafka-2
    build:
      context: ./producer
      dockerfile: Dockerfile
    ports:
      - "8000:5000"
    environment:
      FLASK_APP: webapp.py
      KAFKA_HOSTS: kafka-1:9092,kafka-2:9092
      KAFKA_TOPIC: test
      TZ: Europe/Berlin

  map-web:
    depends_on:
      - kafka-1
      - kafka-2
    build:
      context: ./map-web
      dockerfile: Dockerfile
    ports:
      - "8001:5000"
    environment:
      FLASK_APP: webapp.py
      KAFKA_HOSTS: kafka-1:9092,kafka-2:9092
      KAFKA_TOPIC: test
      DIST_URL: http://agg1:6066/distance/latest

  agg1:
    depends_on:
      - kafka-1
      - kafka-2
    build:
      context: ./aggregator
      dockerfile: Dockerfile
    ports:
      - "8002:6066"
    environment:
      BROKER_URL: kafka://kafka-1:9092;kafka-2:9092
      KAFKA_TOPIC: test
      TABLE_BASE_NAME: dist
      TABLE_AGG_NAME: agg
      AGG_NAME: agg-dist

  kafka-ui:
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka-1
      - kafka-2
    ports:
      - "8003:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka-1:9092,kafka-2:9092
      JVM_OPTS: -Xms32M -Xmx64M